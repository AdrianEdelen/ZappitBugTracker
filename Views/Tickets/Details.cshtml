@model ZappitBugTracker.Models.Ticket
@inject Microsoft.AspNetCore.Identity.UserManager<BTUser> userManager
@inject ZappitBugTracker.services.IBTRolesService rolesService
@inject ZappitBugTracker.services.IBTProjectService projectService
@inject ZappitBugTracker.services.IBTAccessService accessService

@{
	var user = await userManager.GetUserAsync(User);
	var userId = await userManager.GetUserIdAsync(user);
	var ticketId = Model.Id;
	ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
	<h4>Ticket</h4>
	<hr />
	<!-- Ticket Details -->
	<div class="row">
		<div class="col-4">
			<div class="row">
				<div class="col">
					<div class="card shadow mb-4">
						<div class="card-header py-3">
							<h6 class="m-0 font-weight-bold text-primary">Ticket Details <a asp-controller="Tickets" asp-action="Edit" asp-route-id="@ticketId">(edit)</a></h6>
						</div>
						<div class="card-body">
							<dl>
								<dt class="">
									Title
								</dt>
								<ddclass class="col-sm-10">
									@Html.DisplayFor(model => model.Title)
								</ddclass>
								<dt>
									Description
								</dt>
								<dd class="col-sm-10">
									@Html.DisplayFor(model => model.Description)
								</dd>
								<dt class="">
									Created Date
								</dt>
								<dd class="col-sm-10">
									@Html.DisplayFor(model => model.Created)
								</dd>
								@if (Model.Updated != null)
								{
									<dt class="">
										Updated Date
									</dt>
									<dd class="col-sm-10">
										@Html.DisplayFor(model => model.Updated)
									</dd>
								}

								<dt class="">
									Project Name
								</dt>
								<dd class="col-sm-10">
									@Html.DisplayFor(model => model.Project.Name)
								</dd>
								<dt class="">
									Category
								</dt>
								<dd class="col-sm-10">
									@Html.DisplayFor(model => model.TicketType.Name)
								</dd>
								<dt class="">
									Priority
								</dt>
								<dd class="col-sm-10">
									@Html.DisplayFor(model => model.TicketPriority.Name)
								</dd>
								<dt class="">
									Status
								</dt>
								<dd class="col-sm-10">
									@Html.DisplayFor(model => model.TicketStatus.Name)
								</dd>
								<dt class="">
									Ticket Creator
								</dt>
								<dd class="col-sm-10">
									@Html.DisplayFor(model => model.OwnerUser.FullName)
								</dd>
								<dt class="">
									Assigned Developer
								</dt>
								@if (Model.DeveloperUserId != null)
								{
									<dd class="col-sm-10">
										@Html.DisplayFor(model => model.DeveloperUser.FullName)
									</dd>
								}
								else
								{
									<dd class="col-sm-10">
										Unassigned
									</dd>
								}
							</dl>
							@*<hr />*@
							@*<a asp-controller="Tickets" asp-action="CreateAttachment" asp-route-id="TicketId">Add Attachment</a>
							Link For View Attachments Modal?*@
						</div>
					</div>
				</div>
			</div>
			<div class="row">
				<div class="col">
					<div class="card shadow mb-4">
						<div class="card-header py-3">
							<h6 class="m-0 font-weight-bold text-primary">Ticket Histories</h6>
						</div>
						<div class="card-body">
							<table class="table myTableHistory" id="myTable1">
								<thead>
									<tr>
										<th>
											Changed Field
										</th>
										<th>
											Original
										</th>
										<th>
											Updated
										</th>
										<th>
											Change Date
										</th>

										<th>
											Changed By
										</th>

									</tr>
								</thead>
								<tbody>
									@foreach (var item in Model.Histories)
									{
										<tr>
											<td>
												@Html.DisplayFor(modelItem => item.Property)
											</td>
											<td>

												@Html.DisplayFor(modelItem => item.OldValue)
											</td>
											<td>
												@Html.DisplayFor(modelItem => item.NewValue)
											</td>
											<td>
												@Html.DisplayFor(modelItem => item.Created)
											</td>

											<td>
												@Html.DisplayFor(modelItem => item.User.Id)
											</td>

										</tr>
									}
								</tbody>
							</table>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class="col">
			<div class="card shadow mb-4">
				<div class="card-header py-3">
					<h6 class="m-0 font-weight-bold text-primary">Comments</h6>
				</div>
				<div class="card-body">
					<div class="row">
						<table class="table myTable" id="myTable1">
							<thead>
								<tr>
									<th>
										Comment
									</th>
									<th>
										Author
									</th>
									<th>
										Created
									</th>
								</tr>
							</thead>
							<tbody>
								@foreach (var item in Model.Comments)
								{
									<tr>
										<td>
											@Html.DisplayFor(modelItem => item.Comment)
										</td>
										<td>
											@Html.DisplayFor(modelItem => item.User.FullName)
										</td>
										<td>
											@Html.DisplayFor(modelItem => item.Created)
										</td>
									</tr>
								}
							</tbody>
						</table>
					</div>
					<div class="row">
						<div class="col">
							@if (await accessService.CanInteractTicket(userId, Model.Id, "Developer")
							 || await rolesService.IsUserInRole(user, "Admin")
							 || (await rolesService.IsUserInRole(user, "ProjectManager")
							 && await projectService.IsUserOnProject(userId, Model.ProjectId))
							 || userId == Model.OwnerUserId)
							{
								<form asp-controller="TicketComments" asp-action="Create">
									<div asp-validation-summary="ModelOnly" class="text-danger"></div>
									@Html.Hidden("TicketId", Model.Id)
									<div class="form-group">
										<textarea name="Comment" class="form-control"> </textarea>
									</div>
									<div class="form-group">
										<input type="submit" value="Submit Comment" class="btn btn-primary" />
									</div>
								</form>
							}
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

