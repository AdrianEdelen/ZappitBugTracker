@model IEnumerable<ZappitBugTracker.Models.Ticket>
@inject Microsoft.AspNetCore.Identity.UserManager<BTUser> userManager
@inject ZappitBugTracker.services.IBTRolesService rolesService
@inject ZappitBugTracker.services.IBTProjectService projectService
@inject ZappitBugTracker.services.IBTAccessService accessService
@{
	var user = await userManager.GetUserAsync(User);
	var userId = await userManager.GetUserIdAsync(user);
	ViewData["Title"] = "ProjectTickets";
}

<h1>Tickets for This Project</h1>

<p>
	<a asp-route-id="@ViewData["ProjectId"]" asp-action="Create">Create New Ticket</a>
</p>
<div>
	<a asp-area="" asp-controller="Projects" asp-action="Index">Back to Projects</a>
</div>
<table class="table" id="projectTicketsTable">
	<thead>
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.Title)
			</th>
			
			<th>
				@Html.DisplayNameFor(model => model.Created)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Updated)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.TicketType)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.TicketStatus)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.OwnerUser)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.DeveloperUser)
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			if (await accessService.CanInteractTicket(userId, item.Id, "Developer")
				|| await rolesService.IsUserInRole(user, "Admin")
				|| (await rolesService.IsUserInRole(user, "ProjectManager")
				&& await projectService.IsUserOnProject(userId, item.ProjectId))
				|| userId == item.OwnerUserId)
			{
				<tr>
					<td>
						<a asp-action="Details" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Title)</a>

					</td>
					
					<td>
						@Html.DisplayFor(modelItem => item.Created)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Updated)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.TicketType.Name)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.TicketStatus.Name)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.OwnerUser.FullName)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.DeveloperUser.FullName)
					</td>
					<td>
						@if (await rolesService.IsUserInRole(user, "Submitter") == false)
						{
							<a asp-action="Edit" asp-route-id="@item.Id">Edit</a><span> | </span>
						}
						<a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
					</td>
				</tr>
			}
		}
	</tbody>
</table>



