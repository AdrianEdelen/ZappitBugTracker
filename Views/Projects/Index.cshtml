@model IEnumerable<ZappitBugTracker.Models.Project>
@inject Microsoft.AspNetCore.Identity.UserManager<BTUser> userManager
@inject ZappitBugTracker.services.IBTRolesService rolesService
@inject ZappitBugTracker.services.IBTProjectService projectService
@inject ZappitBugTracker.services.IBTAccessService accessService
@inject ZappitBugTracker.services.IBTImageService imageService

@{
	var user = await userManager.GetUserAsync(User);
	var visibleProjects = projectService.ListUserProjectsAsync(user.Id);
	var userId = await userManager.GetUserIdAsync(user);
	ViewData["Title"] = "Index";
}




<div class="card shadow mb-4 h-100">
	<div class="card-header py-3">
		<h6 class="m-0 font-weight-bold text-primary">All Projects</h6>
	</div>
	<div class="card-body">
		<table class="table myTable" id="myTable5">
			<thead>
				<tr>
					<th>
						@Html.DisplayNameFor(model => model.Name)
					</th>
					<th>
						Image
					</th>
					<th></th>
				</tr>
			</thead>
			<tbody>

				@foreach (var item in Model)
				{

					<tr>
						<td>
							<a asp-controller="Tickets" asp-action="ProjectTickets" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Name)</a>

						</td>
						<td>
							<img src="@imageService.DecodeImage(item.ImageData, item.ImagePath)" class="img-fluid maxImage200x200" />
						</td>
						<td>
							@if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
							{
								<a asp-action="AddProjectUsers" asp-route-id="@item.Id">Add Users To Project</a>
							}
						</td>
					</tr>
				}


			</tbody>
		</table>
	</div>
</div>
@*@if (await rolesService.IsUserInRole(user, "Admin") || await rolesService.IsUserInRole(user, "ProjectManager"))
	{
		<h1>All Projects</h1>
		<p>
			<a asp-action="Create">Create New</a>
		</p>
		<table class="table">
			<thead>
				<tr>
					<th>
						@Html.DisplayNameFor(model => model.Name)
					</th>
					<th>
						@Html.DisplayNameFor(model => model.ImagePath)
					</th>
					<th>
						@Html.DisplayNameFor(model => model.ImageData)
					</th>
					<th></th>
				</tr>
			</thead>
			<tbody>

				@foreach (var item in Model)
				{

					<tr>
						<td>
							<a asp-controller="Tickets" asp-action="ProjectTickets" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Name)</a>

						</td>
						<td>
							@Html.DisplayFor(modelItem => item.ImagePath)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.ImageData)
						</td>
						<td>
							<a asp-action="AddProjectUsers" asp-route-id="@item.Id">Add Users To Project</a> |
							<a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
							<a asp-action="Details" asp-route-id="@item.Id">Details</a> |


						</td>
					</tr>
				}


			</tbody>
		</table>

	}*@

