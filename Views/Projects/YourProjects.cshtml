@model IEnumerable<ZappitBugTracker.Models.Project>
@inject Microsoft.AspNetCore.Identity.UserManager<BTUser> userManager
@inject ZappitBugTracker.services.IBTRolesService rolesService
@inject ZappitBugTracker.services.IBTProjectService projectService
@inject ZappitBugTracker.services.IBTAccessService accessService

@{
	var user = await userManager.GetUserAsync(User);
	var visibleProjects = projectService.ListUserProjectsAsync(user.Id);
	var userId = await userManager.GetUserIdAsync(user);
	ViewData["Title"] = "Index";
}




<h1>Your Projects</h1>
<table class="table myTable" id="myTable5">
	<thead>
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.Name)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.ImagePath)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.ImageData)
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>

		@foreach (var item in Model)
		{

			<tr>
				<td>
					<a asp-controller="Tickets" asp-action="ProjectTickets" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Name)</a>

				</td>
				<td>
					@Html.DisplayFor(modelItem => item.ImagePath)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.ImageData)
				</td>
				<td>
					@if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
					{
						<a asp-action="AddProjectUsers" asp-route-id="@item.Id">Add Users To Project</a><span> |</span>
					}
					<a asp-action="Details" asp-route-id="@item.Id">Details</a>
				</td>
			</tr>
		}


	</tbody>
</table>